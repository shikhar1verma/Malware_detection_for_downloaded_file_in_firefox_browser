#!/usr/bin/env python
'''
this project is for detecting the malware in file automatically when you download through firefox browser.
this the main file through this other modules are accessed.This project uses Virus Total's API for detecting
malware, for scanning files.And scan small files which you have downloaded once you execute the script. It
will show you different information of file and tell how many antiviruses scan the file. And how many were
positives for any malware. Its for LINUX users. You give this folders path and the path of your mozilla firefox
user profile, then it will automatically detects for viruse for the file you download in future.
'''
import os                           #importing all modules
import sqlite3
from copy_file  import copyFile
from hash_making import *
from database import *
from json_logs import *
from vtcheck import *
from visualisation import *

path = raw_input('Path of this project: ')              #user input of path of this folder
fire_path = raw_input('path of firefox user: ')         #user input for firefox user profile
os.popen('export PATH=$PATH:'+path)                     #driver configuration path

while True:                                                         #check for all the files downloaded by the user after executing this scrip
    copyFile(fire_path+'/places.sqlite',path+'/data.db')            #copying the file you download to other folder
    u  = printdownloads(fire_path+'/places.sqlite',path+'/data.db') #putting the result in database
    command = 'cp '+str(u)+' '+path+'/file-folder'                  #command for copying
    os.popen(command)
    hashing(path+'/file-folder')                                    #make hash of the file
    output = vtCheck(path)                                          #sending the file to virus total and getting the result in json
    jsonLogs(output,path+'/data.db')                                #putting the json result in database
    os.popen('rm -rf '+path+'/file-folder/*')                       #formating the copied files
    os.popen('rm -rf '+path+'/json_result/*')                      #formatting the json results
    visual(path+'/data.db')                                         #visualising the result to user

