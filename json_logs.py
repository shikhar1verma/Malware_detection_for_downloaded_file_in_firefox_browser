#!/usr/bin/env python
'''
this script will put the required json result in the project's database.The name of the
tables are vtclassification and vtresult.
'''
import sqlite3          #required libraries
import json
import collections
import os


def convert(data):                                  #it will convert the whole dictionary from unicode format to utf-8
    if isinstance(data, basestring):
        return str(data)
    elif isinstance(data, collections.Mapping):
        return dict(map(convert, data.iteritems()))
    elif isinstance(data, collections.Iterable):
        return type(data)(map(convert, data))
    else:
        return data

def putInVtClassification(MD5,total,positives,data):        #it will put the total scans and positive scans in vtclassifiction table

    con =sqlite3.connect(data)
    c = con.cursor()
    c.execute('CREATE TABLE IF NOT EXISTS vtclassification(id INTEGER PRIMARY KEY AUTOINCREMENT,SHA256 TEXT,Total INT,Positives INT)')
    c.execute('INSERT INTO vtclassification(SHA256,Total,Positives) VALUES(?,?,?)',(MD5,total,positives))
    con.commit()
    c.close()
    con.close()

def putInVtResult(MD5,antivirus,detected,result,data):      #it will put the name of antiviruses and detected malware name in vtresults

    conne =sqlite3.connect(data)
    t = conne.cursor()
    t.execute('CREATE TABLE IF NOT EXISTS vtresult(SHA256 TEXT,Antivirus TEXT,Detected INT,Result TEXT)')
    t.execute('INSERT INTO vtresult VALUES(?,?,?,?)',(MD5,antivirus,detected,result))
    conne.commit()
    t.close()
    conne.close()

def jsonLogs(b,data):                   #it will convert the whole results into small small results and put in the table

    j = json.loads(open(b,'r').read())
    d = convert(j)
    putInVtClassification(d['resource'],d['total'],d['positives'],data)
    scans = d['scans']
    anti = scans.keys()
    for i in anti:
        res = scans[i]
        if res['detected']:             #converting the boolean into 0 and 1
            res['detected'] = 1
        else:
            res['detected'] = 0
        putInVtResult(d['resource'],i,res['detected'],res['result'],data)



