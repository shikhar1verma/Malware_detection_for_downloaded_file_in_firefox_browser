#!/usr/bin/env python
'''
This script will add the required data from firefox database to this project database(data.db).
Required data like date time,size of file, name of file, extension, path of file will be written
on logs table in database.
'''
import sqlite3      #importing required libraries
import time
import json

def printdownloads(downloadDB,data):        #this function will extract the required info from firefox db in human readable format
    v=[]
    pid=[]

    conn = sqlite3.connect(downloadDB)      #creating connection from firefox database
    c = conn.cursor()
    c.execute('SELECT content,id,place_id  FROM moz_annos ORDER BY id DESC LIMIT 3;')

    for row in c:                           #putting data in empty list
         v.append(row[0])
         pid.append(int(row[2]))

    dic = v[0]                              #getting the unicoded dictionary
    dic = dic.encode(encoding='utf-8')      #converting string of dictionary to utf-8 format
    dic = json.loads(dic)                   #converting string to dictionary
    Dtime =time.strftime("%a %d %b %Y %H:%M:%S IST", time.localtime(dic['endTime'] / 1000.0))   #converting epoch to local date time

    fil = v[1]                              #getting file name
    fil = fil.encode(encoding='utf-8')      #converting the unicode string to utf-8
    rev = fil[::-1]                         #string formatting to split the extension and file name
    rev = rev.split('.',1)
    filn = rev[1].split('/',1)
    filn = filn[0][::-1]
    re = rev[0][::-1]

    filp = fil.split('ile://')              #getting the exact file path

    return putToSQLite(pid[0],Dtime,int(dic['fileSize']),filn,re,filp[1],data)                   #returning the path


def putToSQLite(fid,Dtime,size,name,extension,path,data):       #this function will put the info to the logs table
    conne =sqlite3.connect(data)                                #making connection
    t = conne.cursor()                                          #creating table and inserting values
    t.execute('CREATE TABLE IF NOT EXISTS logs(id INTEGER PRIMARY KEY AUTOINCREMENT,firefox_id INT,Dtime TEXT,size INT,name TEXT,extension TEXT,path TEXT)')
    t.execute('INSERT INTO logs(firefox_id,Dtime,size,name,extension,path) VALUES(?,?,?,?,?,?)',(fid,Dtime,size,name,extension,path))
    conne.commit()                                              #commiting to the database
    t.close()                                                   #closing connection
    conne.close()
    path = path.replace('%20','\ ')                             #getting the exact path of file
    return path                                                 #returning it to printdownloads function


